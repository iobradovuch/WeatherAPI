name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_IMAGE: weatherapi
  DOCKER_TAG: ${{ github.sha }}

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test Application
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Restore dependencies
      run: dotnet restore src/WeatherAPI/WeatherAPI.csproj
      
    - name: Build
      run: dotnet build src/WeatherAPI/WeatherAPI.csproj --no-restore --configuration Release
      
    - name: Test
      run: dotnet test src/ --no-build --configuration Release --verbosity normal

  build:
    runs-on: ubuntu-latest
    needs: test
    name: Build and Push Docker Image
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build Docker image
      run: |
        docker build -t ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }} .
        docker build -t ${{ env.DOCKER_IMAGE }}:latest .
        
    - name: Push Docker image
      if: github.event_name != 'pull_request'
      run: |
        docker push ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
        docker push ${{ env.DOCKER_IMAGE }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    name: Deploy to Kubernetes
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'
        
    - name: Configure kubectl
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBE_CONFIG }}" | base64 --decode > $HOME/.kube/config
        
    - name: Update deployment image
      run: |
        kubectl set image deployment/weatherapi-deployment weatherapi=${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }} -n weatherapi
        kubectl rollout status deployment/weatherapi-deployment -n weatherapi
        
    - name: Verify deployment
      run: |
        kubectl get pods -n weatherapi
        kubectl get services -n weatherapi